export interface Database {
  public: {
    Tables: {
      strategies: {
        Row: {
          id: number;
          userId: string;
          title: string | null;
          client: string | null;
          description: string | null;
          status: string | null;
          progress: number | null;
          lastModified: string | null;
          createdAt: string;
          updatedAt: string | null;
          blueprint_config: any;
          
          // JSONB fields
          vision: Record<string, any> | null;
          okrs: Record<string, any> | null;
          problems: Record<string, any> | null;
          initiatives: Record<string, any> | null;
          personas: Record<string, any> | null;
          epics: Record<string, any> | null;
          customerExperience: Record<string, any> | null;
          experienceSections: Record<string, any> | null;
          userJourneys: Record<string, any> | null;
          features: Record<string, any> | null;
          roadmap: Record<string, any> | null;
          techRequirements: Record<string, any> | null;
          techStack: Record<string, any> | null;
          team: Record<string, any> | null;
          cost: Record<string, any> | null;
          deliveryPlan: Record<string, any> | null;
          strategicContext: Record<string, any> | null;
          valuePropositions: Record<string, any> | null;
          workstreams: Record<string, any> | null;
          technicalStacks: Record<string, any> | null;
          organisationalCapabilities: Record<string, any> | null;
          gtmPlays: Record<string, any> | null;
          serviceBlueprints: Record<string, any> | null;
          ideasBank: Record<string, any> | null;
          blueprintConfiguration: Record<string, any> | null;
        };
        Insert: {
          userId: string;
          title?: string | null;
          client?: string | null;
          description?: string | null;
          status?: string | null;
          progress?: number | null;
          blueprint_config?: any;
          vision?: Record<string, any> | null;
          okrs?: Record<string, any> | null;
          problems?: Record<string, any> | null;
          initiatives?: Record<string, any> | null;
          personas?: Record<string, any> | null;
          epics?: Record<string, any> | null;
          customerExperience?: Record<string, any> | null;
          experienceSections?: Record<string, any> | null;
          userJourneys?: Record<string, any> | null;
          features?: Record<string, any> | null;
          roadmap?: Record<string, any> | null;
          techRequirements?: Record<string, any> | null;
          techStack?: Record<string, any> | null;
          team?: Record<string, any> | null;
          cost?: Record<string, any> | null;
          deliveryPlan?: Record<string, any> | null;
          strategicContext?: Record<string, any> | null;
          valuePropositions?: Record<string, any> | null;
          workstreams?: Record<string, any> | null;
          technicalStacks?: Record<string, any> | null;
          organisationalCapabilities?: Record<string, any> | null;
          gtmPlays?: Record<string, any> | null;
          serviceBlueprints?: Record<string, any> | null;
          ideasBank?: Record<string, any> | null;
          blueprintConfiguration?: Record<string, any> | null;
        };
        Update: {
          userId?: string;
          title?: string | null;
          client?: string | null;
          description?: string | null;
          status?: string | null;
          progress?: number | null;
          lastModified?: string | null;
          updatedAt?: string | null;
          blueprint_config?: any;
          vision?: Record<string, any> | null;
          okrs?: Record<string, any> | null;
          problems?: Record<string, any> | null;
          initiatives?: Record<string, any> | null;
          personas?: Record<string, any> | null;
          epics?: Record<string, any> | null;
          customerExperience?: Record<string, any> | null;
          experienceSections?: Record<string, any> | null;
          userJourneys?: Record<string, any> | null;
          features?: Record<string, any> | null;
          roadmap?: Record<string, any> | null;
          techRequirements?: Record<string, any> | null;
          techStack?: Record<string, any> | null;
          team?: Record<string, any> | null;
          cost?: Record<string, any> | null;
          deliveryPlan?: Record<string, any> | null;
          strategicContext?: Record<string, any> | null;
          valuePropositions?: Record<string, any> | null;
          workstreams?: Record<string, any> | null;
          technicalStacks?: Record<string, any> | null;
          organisationalCapabilities?: Record<string, any> | null;
          gtmPlays?: Record<string, any> | null;
          serviceBlueprints?: Record<string, any> | null;
          ideasBank?: Record<string, any> | null;
          blueprintConfiguration?: Record<string, any> | null;
        };
      };
      users: {
        Row: {
          id: string;
          email: string;
          firstName: string | null;
          lastName: string | null;
          profileImageUrl: string | null;
          createdAt: string;
          updatedAt: string | null;
        };
        Insert: {
          id?: string;
          email: string;
          firstName?: string | null;
          lastName?: string | null;
          profileImageUrl?: string | null;
        };
        Update: {
          email?: string;
          firstName?: string | null;
          lastName?: string | null;
          profileImageUrl?: string | null;
          updatedAt?: string | null;
        };
      };
      tech_stacks: {
        Row: {
          id: string;
          strategy_id: number;
          stack_name: string;
          stack_type: string;
          created_by: string;
          layers: any;
          metadata: any;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          strategy_id: number;
          stack_name: string;
          stack_type: string;
          created_by: string;
          layers?: any;
          metadata?: any;
        };
        Update: {
          stack_name?: string;
          stack_type?: string;
          layers?: any;
          metadata?: any;
          updated_at?: string;
        };
      };
      tech_stack_components: {
        Row: {
          id: string;
          tech_stack_id: string;
          user_id: string;
          technology_name: string;
          category: string;
          subcategory: string | null;
          version_current: string | null;
          vendor: string | null;
          license_type: string | null;
          language_ecosystem: string | null;
          implementation_status: string;
          title: string;
          description: string;
          priority: 'High' | 'Medium' | 'Low';
          confidence_level: 'High' | 'Medium' | 'Low';
          priority_rationale: string | null;
          confidence_rationale: string | null;
          strategic_alignment: string | null;
          tags: string[];
          relationships: any[];
          primary_functions: string[];
          technical_specifications: any;
          our_implementation: any;
          integration_capabilities: any;
          our_integrations: any;
          development_patterns: any;
          our_workflow: any;
          dependencies: any;
          ecosystem_compatibility: any;
          our_dependencies: any;
          recommended_patterns: any;
          our_standards: any;
          performance_features: any;
          our_performance: any;
          security_capabilities: any;
          our_security: any;
          common_issues: any;
          our_support: any;
          implementation_guidance: any;
          ai_generated: boolean;
          ai_generation_context: any | null;
          generation_quality_score: number | null;
          created_at: string;
          updated_at: string;
          created_by: string | null;
        };
        Insert: {
          tech_stack_id: string;
          user_id: string;
          technology_name: string;
          category: string;
          implementation_status?: string;
          title: string;
          priority?: 'High' | 'Medium' | 'Low';
          confidence_level?: 'High' | 'Medium' | 'Low';
          description?: string;
          tags?: string[];
          relationships?: any[];
          subcategory?: string | null;
          version_current?: string | null;
          vendor?: string | null;
          license_type?: string | null;
          language_ecosystem?: string | null;
          priority_rationale?: string | null;
          confidence_rationale?: string | null;
          strategic_alignment?: string | null;
          primary_functions?: string[];
          technical_specifications?: any;
          our_implementation?: any;
          integration_capabilities?: any;
          our_integrations?: any;
          development_patterns?: any;
          our_workflow?: any;
          dependencies?: any;
          ecosystem_compatibility?: any;
          our_dependencies?: any;
          recommended_patterns?: any;
          our_standards?: any;
          performance_features?: any;
          our_performance?: any;
          security_capabilities?: any;
          our_security?: any;
          common_issues?: any;
          our_support?: any;
          implementation_guidance?: any;
          ai_generated?: boolean;
          ai_generation_context?: any | null;
          generation_quality_score?: number | null;
          created_by?: string | null;
        };
        Update: {
          technology_name?: string;
          category?: string;
          subcategory?: string | null;
          version_current?: string | null;
          vendor?: string | null;
          license_type?: string | null;
          language_ecosystem?: string | null;
          implementation_status?: string;
          title?: string;
          description?: string;
          priority?: 'High' | 'Medium' | 'Low';
          confidence_level?: 'High' | 'Medium' | 'Low';
          priority_rationale?: string | null;
          confidence_rationale?: string | null;
          strategic_alignment?: string | null;
          tags?: string[];
          relationships?: any[];
          primary_functions?: string[];
          technical_specifications?: any;
          our_implementation?: any;
          integration_capabilities?: any;
          our_integrations?: any;
          development_patterns?: any;
          our_workflow?: any;
          dependencies?: any;
          ecosystem_compatibility?: any;
          our_dependencies?: any;
          recommended_patterns?: any;
          our_standards?: any;
          performance_features?: any;
          our_performance?: any;
          security_capabilities?: any;
          our_security?: any;
          common_issues?: any;
          our_support?: any;
          implementation_guidance?: any;
          ai_generated?: boolean;
          ai_generation_context?: any | null;
          generation_quality_score?: number | null;
          updated_at?: string;
        };
      };
      strategy_groups: {
        Row: {
          id: string;
          strategy_id: number;
          name: string;
          color: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          strategy_id: number;
          name: string;
          color?: string;
        };
        Update: {
          name?: string;
          color?: string;
          updated_at?: string;
        };
      };
      cards: {
        Row: {
          id: string;
          strategy_id: number;
          card_type: string;
          title: string;
          description: string | null;
          priority: string;
          confidence_level: string;
          priority_rationale: string | null;
          confidence_rationale: string | null;
          strategic_alignment: string | null;
          tags: string[];
          relationships: any[];
          group_ids: string[] | null;
          created_at: string;
          updated_at: string;
          created_by: string;
        };
        Insert: {
          strategy_id: number;
          card_type: string;
          title: string;
          description?: string | null;
          priority?: string;
          confidence_level?: string;
          priority_rationale?: string | null;
          confidence_rationale?: string | null;
          strategic_alignment?: string | null;
          tags?: string[];
          relationships?: any[];
          group_ids?: string[] | null;
          created_by: string;
        };
        Update: {
          card_type?: string;
          title?: string;
          description?: string | null;
          priority?: string;
          confidence_level?: string;
          priority_rationale?: string | null;
          confidence_rationale?: string | null;
          strategic_alignment?: string | null;
          tags?: string[];
          relationships?: any[];
          group_ids?: string[] | null;
          updated_at?: string;
        };
      };
    };
    Views: {
      strategy_groups_with_counts: {
        Row: {
          id: string;
          strategy_id: number;
          name: string;
          color: string;
          created_at: string;
          updated_at: string;
          card_count: number;
        };
      };
    };
    Functions: {
      remove_group_from_all_cards: {
        Args: { group_id_param: string };
        Returns: void;
      };
    };
    Enums: {};
  };
}